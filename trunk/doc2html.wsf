<?xml version="1.0" encoding="windows-1251" ?>

<package>
<job id="install_tool">
<?job error="true" debug="false" ?>

<runtime>
<description><![CDATA[DOC2HTML Converter
Copyright (C) 2004, 2009 Ildar Shaimordanov

This script allows to convert any DOC file to TXT, RTF, HTML (default), MHT (Web Archive), XML, PDF or XPS

To make an easy access from the context menu 'Send To' lauch once this script with /help:sendto.

NOTES:
This script requires the "Microsoft Save as PDF or XPS Add-in for 2007 Microsoft Office programs", available at:
http://www.microsoft.com/downloads/details.aspx?familyid=4D951911-3E7E-4AE6-B059-A2E79ED87041&displaylang=en
]]></description>
<unnamed
	name="FILENAME"
	helpstring="The WINWORD document filename"
	many="true"
	required="true"
/>
<named
	name="F"
	helpstring="Specifies output format such as TXT, RTF, HTML (default), MHT, XML, PDF or XPS"
	type="string"
	required="false"
/>
<named
	name="V"
	helpstring="Verbosely list files processed"
	type="boolean"
	required="false"
/>
<named
	name="FG"
	helpstring="Specify this if you want to launch WINWORD in foreground"
	type="boolean"
	required="false"
/>
<example>
Example: doc2html.wsf document.doc
</example>
</runtime>
<object id="fso" progid="Scripting.FileSystemObject" />
<object id="wshShell" progid="WScript.Shell" />
<script language="javascript" src="js/win32/FileSystem.js"></script>
<script language="javascript" src="js/Globals.js"></script>
<script language="javascript"><![CDATA[

if ( WScript.Arguments.length < 1 ) {
	WScript.Arguments.ShowUsage();
	WScript.Quit();
}

var verbose = false;

function logInfo(text)
{
	if ( ! verbose ) {
		return;
	}
	var now = new Date();
	var date = "%04d/%02d/%02d %02d:%02d:%02d.%03d".sprintf(
			now.getFullYear(),
			now.getMonth(),
			now.getDay(),
			now.getHours(),
			now.getMinutes(),
			now.getSeconds(),
			now.getMilliseconds());

	WScript.Echo(date, text);
}

var formats = {
	'txt':	4,
	'rtf':	6,
	'html':	8,
	'mht':	9,
	'xml':	11,
	'pdf':	17,
	'xps':	18};

var fileFormat = 'html';

var e;
try {

	// Creating of 'Send To' context menu
	if ( WScript.Arguments.Named.Exists('help') && WScript.Arguments.Named.item('help').toLowerCase() == 'sendto' ) {

		var sendTo = wshShell.SpecialFolders('SendTo');
		var folder = sendTo + '\\doc2xxx';
		try {
			fso.CreateFolder(folder);
		} catch (e) {
		}

		var lnk;
		for (var p in formats) {
			lnk = wshShell.CreateShortcut(folder + '\\doc2' + p + '.lnk');
			lnk.TargetPath = 'wscript';
			lnk.Arguments = WScript.ScriptFullName + ' /f:' + p;
			lnk.Description = 'Convert .DOC to .' + p.toUpperCase();
			lnk.Save();
		}

		WScript.Quit();

	}

	// Validate output format
	if ( WScript.Arguments.Named.Exists('f') ) {
		fileFormat = WScript.Arguments.Named.item('f').toLowerCase();
		if ( ! fileFormat ) {
			throw new Error('Unknown output format');
		}
	}

	// Verbosely ?
	verbose = ! WScript.FullName.match(/wscript/i) && WScript.Arguments.Named.Exists('V');

	// Process file list
	logInfo('Processing arguments');

	var args = WScript.Arguments.Unnamed;

	var filelist = [];
	for (var i = 0; i < args.length; i++) {
		var f = args.Item(i);
		filelist = filelist.concat(FileSystem.glob(f));
	}
	if ( filelist.length < 1 ) {
		throw new Error('Empty file list');
	}

	logInfo('Files to be processed:\n\t' + filelist.join('\n\t'));

	// Launch the WINWORD application and start a file converting loop
	logInfo('WINWORD is starting');
	var word = new ActiveXObject("Word.Application");

	if ( WScript.Arguments.Named.Exists('fg') ) {
		logInfo('Activating and displaying of the WINWORD');
		word.Visible = true;
		word.Activate();
	}

	for (var i = 0; i < filelist.length; i++) {
		var docfile = String(filelist[i]);
		var newfile = docfile.replace(/\.[^\.]+$/, '.' + fileFormat);

		logInfo('Open "' + docfile + '"');
		word.Documents.Open(docfile);

		logInfo('Save as "' + newfile + '"');
		word.ActiveDocument.SaveAs(newfile, formats[fileFormat]);

		logInfo('Close this document');
		word.ActiveDocument.Close();
	}

} catch (e) {

	WScript.Echo('Error encountered: ' 
//		+ '[' 
//		+ (e.number >> 0x10) 
//		+ ':' 
//		+ (e.number & 0xFFFF) 
//		+ '] - ' 
		+ e.description);

} finally {

	if ( word ) {
		logInfo('WINWORD is closing');
		word.Quit();
		WScript.Sleep(100);
		logInfo('Done');
	}

}

]]></script>
</job>
</package>


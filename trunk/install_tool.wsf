<?xml version="1.0" encoding="windows-1251" ?>

<package>
<job id="install_tool">
<?job error="true" debug="false" ?>

<runtime>
<description><![CDATA[Installer of JSXT tools Copyright (C) 2009 Ildar Shaimordanov

This is not mandatory action. You can use all these tools "as is". 
You do not need run this untility. Download archive and place it's 
content to the appropriate directory.

This utility allows you to install CUJS tools to the comfortable 
location. It makes two things:
-- embeds JS scripts from the "js" directory into the tool
-- copies a resulting file to the directory specified in the 
argument.

Reasonable question arises: 
"Why I should make install if it works fine without this?"

This was made to provide easy way to make each tool independent of 
many files. Once downlanded and installed into the single file the 
tool can be used without emergency of lost some parts of tool.
]]></description>
<unnamed
	name="FILENAME"
	helpstring="The filename of tool to be installed"
	many="false"
	required="true"
/>
<unnamed
	name="PATH"
	helpstring="The path where the tool should be installed"
	many="false"
	required="true"
/>
<named
	name="SQUEEZE"
	helpstring="Specifies this argument if you need obfuscate a code"
	type="boolean"
	required="false"
/>
<example>
Example: install_tool.wsf install_tool.wsf C:\MyTools
</example>
</runtime>
<object id="fso" progid="Scripting.FileSystemObject" />
<object id="wshShell" progid="WScript.Shell" />
<script language="javascript" src="js/Core.js"></script>
<script language="javascript" src="js/Benchmark.js"></script>
<script language="javascript" src="js/Globals.js"></script>
<script language="javascript" src="js/Array.js"></script>
<script language="javascript" src="js/Date.js"></script>
<script language="javascript" src="js/jsmin.js"></script>
<script language="javascript" src="js/Obfuscate.js"></script>
<script language="javascript" src="js/win32/FileSystem.js"></script>
<script language="javascript"><![CDATA[

if ( WScript.Arguments.length < 1 ) {
	WScript.Arguments.ShowUsage();
	WScript.Quit();
}

var filename = WScript.Arguments.Unnamed.item(0);
var output;

var e;
try {
	var target = WScript.Arguments.Unnamed.item(1);
	output = fso.GetAbsolutePathName(target) + '\\' + filename.replace(/.*\\/, '');
	if ( fso.GetAbsolutePathName(filename) == fso.GetAbsolutePathName(output) ) {
		WScript.Echo('The file cannot be copied onto itself');
		WScript.Quit();
	}
} catch (e) {
	output = WScript.StdOut;
}

var scriptOuter = filename.match(/\.wsf$/i) 
	? '\x3Cscript language="javascript">\x3C![CDATA[\n\n//%s\n%s\n\n]]\x3E</script\x3E' 
	: '\x3Cscript language="javascript">\n\n//%s\n%s\n\n</script\x3E';

var content = FileSystem.readFile(filename);

content = content.replace(/<script.*?src="(js\/.+\.js)".*?\/script>/g, function($0, $1)
{
	var f = $1;
	var s;

	s = FileSystem.readFile(f);
	if ( WScript.Arguments.Named.Exists('SQUEEZE') ) {
		s = jsmin(s, 3, '');
//		s = '\n' + obfuscate(s, function(text) { WScript.Echo(text); });
        }

	return scriptOuter.sprintf(f, s);
});

FileSystem.writeFile(output, content, true);

]]></script>
</job>
</package>

